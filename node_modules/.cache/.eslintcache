[{"C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\index.js":"1","C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\routes\\Routes.js":"2","C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\pages\\Login.js":"3","C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\pages\\Menu.js":"4","C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\pages\\MenuAdmin.js":"5","C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\pages\\MenuAdminV2.js":"6"},{"size":216,"mtime":1632875875369,"results":"7","hashOfConfig":"8"},{"size":625,"mtime":1633471514255,"results":"9","hashOfConfig":"8"},{"size":3785,"mtime":1633474107495,"results":"10","hashOfConfig":"8"},{"size":963,"mtime":1632882508314,"results":"11","hashOfConfig":"8"},{"size":9826,"mtime":1633400613293,"results":"12","hashOfConfig":"8"},{"size":8656,"mtime":1633474540120,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bc5pib",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\index.js",[],["28","29"],"C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\routes\\Routes.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\pages\\Login.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\pages\\Menu.js",[],"C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\pages\\MenuAdmin.js",["30"],"import React, { Component } from 'react';\r\nimport Cookies from 'universal-cookie';\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\r\nconst url = \"http://localhost:62856/api/USUARIOs/\";\r\nconst cookies = new Cookies();\r\n\r\nclass MenuAdmin extends Component {\r\n\r\n    state={\r\n        data:[],\r\n        modalInsertar: false,\r\n        modalEliminar: false,\r\n        form:{\r\n            ID : '',\r\n            NOMBRE :'',\r\n            APELLIDO:'',\r\n            EMAIL:'',\r\n            CONTRASENA:'',\r\n            DIRECCION:'',\r\n            TELEFONO:'',\r\n            ACTIVO:'',\r\n            ROLID:'',\r\n            tipomodal: ''\r\n        }\r\n    }\r\n\r\n\r\n    peticionGet=()=>{\r\n        axios.get(url).then(response=>{\r\n            console.log(\"DATA USUARIOS\" , response.data)\r\n            this.setState({data: response.data});\r\n        }).catch(error=>{\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    peticionPost=async()=>{\r\n        delete this.state.form.ID;\r\n       await axios.post(url,this.state.form).then(response=>{\r\n            this.modalInsertar();\r\n            this.peticionGet();\r\n        }).catch(error=>{\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    peticionPut=()=>{\r\n        axios.put(url+this.state.form.ID, this.state.form).then(response=>{\r\n            this.modalInsertar();\r\n            this.peticionGet();\r\n        })\r\n    }\r\n\r\n    peticionDelete=()=>{\r\n        axios.delete(url+this.state.form.ID).then(response=>{\r\n            this.setState({modalEliminar: false});\r\n            this.peticionGet();\r\n        })\r\n    }\r\n    \r\n    modalInsertar=()=>{\r\n        this.setState({modalInsertar: !this.state.modalInsertar});\r\n    }\r\n\r\n    seleccionarUsuario=(usuario) =>{\r\n        this.setState({\r\n            tipomodal: 'actualizar',\r\n            form:{\r\n                ID : usuario.ID,\r\n                NOMBRE : usuario.NOMBRE,\r\n                APELLIDO: usuario.APELLIDO,\r\n                EMAIL: usuario.EMAIL,\r\n                CONTRASENA: usuario.CONTRASENA,\r\n                DIRECCION: usuario.DIRECCION,\r\n                TELEFONO: usuario.TELEFONO,\r\n                ROLID: usuario.ROLID  \r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        // if(!cookies.get('nombre')){\r\n        //     window.location.href=\"./\"\r\n        // }\r\n        this.peticionGet();\r\n    }\r\n\r\n    handleChange=async e=>{\r\n        e.persist();\r\n        await this.setState({\r\n           form:{\r\n               ...this.state.form,\r\n               [e.target.name]: e.target.value\r\n           } \r\n        });\r\n    }\r\n\r\n\r\n    cerrarSesion=()=>{\r\n        cookies.remove('id',{path:\"/\"});\r\n        cookies.remove('nombre',{path:\"/\"});\r\n        cookies.remove('apellido',{path:\"/\"});\r\n        cookies.remove('rol',{path:\"/\"});\r\n        window.location.href='./'\r\n    }\r\n\r\n    render() {\r\n        const {form}=this.state;\r\n        return (\r\n\r\n        <body>\r\n            \r\n            <header>\r\n                 <div>\r\n                     <button onClick={()=>this.cerrarSesion()}>Cerrar sesión</button>\r\n                </div>\r\n            </header>\r\n\r\n            <div className=\"App\">\r\n                <br/>\r\n                <button className=\"btn btn-success\" onClick={()=>{this.setState({form: null,  tipomodal:'insertar'}); this.modalInsertar()}}>Agregar Usuario</button>\r\n                <br/>  <br/>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Nombre</th>\r\n                            <th>Apellido</th>\r\n                            <th>Email</th>\r\n                            <th>Contraseña</th>\r\n                            <th>Direccion</th>\r\n                            <th>Telefono</th>\r\n                            <th>Estado</th>\r\n                            <th>Rol</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {this.state.data.map(usuario=>{\r\n                            return(\r\n                                <tr>\r\n                                    <td>{usuario.ID}</td>\r\n                                    <td>{usuario.NOMBRE}</td>\r\n                                    <td>{usuario.APELLIDO}</td>\r\n                                    <td>{usuario.EMAIL}</td>\r\n                                    <td>{usuario.CONTRASENA}</td>\r\n                                    <td>{usuario.DIRECCION}</td>\r\n                                    <td>{usuario.TELEFONO}</td>\r\n                                    <td>{usuario.ACTIVO}</td>\r\n                                    <td>{usuario.ROLID}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-primary\" onClick={()=>{this.seleccionarUsuario(usuario);  this.modalInsertar()}}> <FontAwesomeIcon icon={faEdit}/></button>\r\n                                        {\"    \"}\r\n                                        <button className=\"btn btn-danger\" onClick={()=>{this.seleccionarUsuario(usuario); this.setState({modalEliminar: true})}}> <FontAwesomeIcon icon={faTrashAlt}/></button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                       })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                    <Modal isOpen = {this.state.modalInsertar}>\r\n                            <ModalHeader style={{display:'block'}}>\r\n                                        <span style={{float: 'right'}}>x</span>\r\n                            </ModalHeader>\r\n                            <ModalBody>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"ID\">ID</label>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"id\" id=\"id\" readOnly value={form?form.ID: this.state.data.length+1}></input>\r\n                                    <br/>\r\n                                    <label htmlFor=\"NOMBRE\">Nombre</label>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"NOMBRE\" id=\"NOMBRE\" onChange={this.handleChange} value={form?form.NOMBRE:''}></input>\r\n                                    <br/>\r\n                                    <label htmlFor=\"APELLIDO\">Apellido</label>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"APELLIDO\" id=\"APELLIDO\" onChange={this.handleChange} value={form?form.APELLIDO:''}></input>\r\n                                    <br/>\r\n                                    <label htmlFor=\"EMAIL\">Email</label>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"EMAIL\" id=\"EMAIL\" onChange={this.handleChange} value={form?form.EMAIL:''}></input>\r\n                                    <br/>\r\n                                    <label htmlFor=\"APELLIDO\">Contraseña</label>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"CONTRASENA\" id=\"CONTRASENA\" onChange={this.handleChange} value={form?form.CONTRASENA:''}></input>\r\n                                    <br/>\r\n                                    <label htmlFor=\"DIRECCION\">Direccion</label>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"DIRECCION\" id=\"DIRECCION\" onChange={this.handleChange} value={form?form.DIRECCION:''}></input>\r\n                                    <br/>\r\n                                    <label htmlFor=\"TELEFONO\">Telefono</label>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"TELEFONO\" id=\"TELEFONO\" onChange={this.handleChange} value={form?form.TELEFONO:''}></input>\r\n                                    <br/>                       \r\n                                    <label htmlFor=\"ROLID\">Rol ID</label>\r\n                                    <input className=\"form-control\" type=\"text\" name=\"ROLID\" id=\"ROLID\" onChange={this.handleChange} value={form?form.ROLID:''}></input>\r\n                                </div>\r\n                            </ModalBody>\r\n\r\n                            <ModalFooter>\r\n                                {this.state.tipomodal=='insertar'?\r\n                                <button className= \"btn btn-success\" onClick={()=>this.peticionPost()}>\r\n                                    Insertar\r\n                                </button>: <button className= \"btn btn-primary\" onClick={()=>this.peticionPut()}>\r\n                                    Actualizar\r\n                                </button>\r\n\r\n\r\n}\r\n                                <button className= \"btn btn-danger\" onClick={()=>this.modalInsertar()}>\r\n                                    Cancelar\r\n                                </button>\r\n                            </ModalFooter>\r\n\r\n\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.modalEliminar}>\r\n                        <ModalBody>\r\n                            Estás seguro que deseas eliminar el usuario {form && form.NOMBRE}\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button className=\"btn btn-danger\" onClick={()=>this.peticionDelete()}>Si</button>\r\n                            <button className=\"btn btn-secundary\" onClick={()=>this.setState({modalEliminar: false})}>No</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n         </body>\r\n  \r\n\r\n        \r\n       \r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuAdmin;","C:\\Users\\diego\\OneDrive\\Escritorio\\Proyecto-de-titulo\\portafolio-restaurant\\src\\pages\\MenuAdminV2.js",["31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":199,"column":54,"nodeType":"38","messageId":"39","endLine":199,"endColumn":56},{"ruleId":"40","severity":1,"message":"41","line":89,"column":30,"nodeType":"42","messageId":"43","endLine":89,"endColumn":32},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]